name: ArcherySec CI

on:
  push:
    branches:
      - workflow

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup
      run: |
        ./setup.sh

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Integration test
        run: |
         bash integration-test.sh || exit 1
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: archerysec/archerysec
          tag_with_ref: true

  SAST:
    name: GitLab SAST Scanners run
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: run dependency check scan
        run: |
         docker run \
          --env SECURE_LOG_LEVEL=${SECURE_LOG_LEVEL} \
          -v "$PWD:/code" \
          -v /var/run/docker.sock:/var/run/docker.sock \
          registry.gitlab.com/gitlab-org/security-products/dependency-scanning:latest /code
          ls

          apt-get install jq
          pip install archerysec-cli

          DATE=`date +%Y-%m-%d`
          export PROJECT_ID=`archerysec-cli -s ${ARCHERYSEC_HOST} -u ${ARCHERYSEC_USER} -p ${ARCHERYSEC_PASS} --createproject \
         --project_name=devsecops --project_disc="devsecops project" --project_start=${DATE} \
         --project_end=${DATE} --project_owner=dev | tail -n1 | jq '.project_id' | sed -e 's/^"//' -e 's/"$//'`

          # Upload Scan report in archerysec

          export SCAN_ID=`archerysec-cli -s ${ARCHERYSEC_HOST} -u ${ARCHERYSEC_USER} -p ${ARCHERYSEC_PASS} \
          --upload --file_type=JSON --file=gl-dependency-scanning-report.json --TARGET=${GITHUB_SHA} \
          --scanner=gitlabsca --project_id=''$PROJECT_ID'' | tail -n1 | jq '.scan_id' | sed -e 's/^"//' -e 's/"$//'`

          echo "Scan Report Uploaded Successfully, Scan Id:" $SCAN_ID

        env:
          ARCHERYSEC_HOST: ${{ ARCHERYSEC_HOST }}
          ARCHERYSEC_USER: ${{ ARCHERYSEC_USER }}
          ARCHERYSEC_PASS: ${{ ARCHERYSEC_PASS }}

      - name: run source code review
        run: |
         docker run \
          --volume "$PWD":/code \
          --volume /var/run/docker.sock:/var/run/docker.sock \
          registry.gitlab.com/gitlab-org/security-products/sast:latest /app/bin/run /code

              apt-get install jq
              pip install archerysec-cli

            DATE=`date +%Y-%m-%d`
             export PROJECT_ID=`archerysec-cli -s ${ARCHERYSEC_HOST} -u ${ARCHERYSEC_USER} -p ${ARCHERYSEC_PASS} --createproject \
             --project_name=devsecops --project_disc="devsecops project" --project_start=${DATE} \
             --project_end=${DATE} --project_owner=dev | tail -n1 | jq '.project_id' | sed -e 's/^"//' -e 's/"$//'`

            export SCAN_ID=`archerysec-cli -s ${ARCHERYSEC_HOST} -u ${ARCHERYSEC_USER} -p ${ARCHERYSEC_PASS} \
            --upload --file_type=JSON --file=${WORKSPACE}/gl-sast-report.json --TARGET=${GIT_COMMIT} \
            --scanner=gitlabsast --project_id=''$PROJECT_ID'' | tail -n1 | jq '.scan_id' | sed -e 's/^"//' -e 's/"$//'`
            echo "Scan Report Uploaded Successfully, Scan Id:" $SCAN_ID

        env:
          ARCHERYSEC_HOST: ${{ ARCHERYSEC_HOST }}
          ARCHERYSEC_USER: ${{ ARCHERYSEC_USER }}
          ARCHERYSEC_PASS: ${{ ARCHERYSEC_PASS }}